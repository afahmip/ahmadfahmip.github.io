{"version":3,"sources":["containers/HomePage/index.js","containers/App/index.js","components/Menu/index.js","registerServiceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","id","className","Component","App","react_router","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","react_router_dom","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"8RAgCeA,0LA1BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,2BACrBF,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,yBACjBF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OAAd,yBAEAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAb,qEAA4FJ,EAAAC,EAAAC,cAAA,WAA5F,sDACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBADf,OAGEJ,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,qDAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAnBFC,sBCiBRC,SChBID,mMDGf,OACEL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEfJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWV,cAPnBM,cEIZK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OACPlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,OAEDC,SAASC,eAAe,SDUZ,WACb,GAA6C,kBAAmBpB,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwB5B,OAAOC,UAC3C4B,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAA0B,OAAMH,GAAN,sBAEP9B,GAiDV,SAAiCO,GAE/B2B,MAAM3B,GACHI,KAAK,SAAAwB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BT,OAAOC,SAASuC,aAKpBpC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAuB,CAAwBpC,GAIxBC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,MCrCxBqC","file":"static/js/main.68311ab7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss'\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"home\">\r\n        <div className=\"intro page-container\">\r\n          <h1>frontend & ui/ux <span>enthusiast</span></h1>\r\n          <h1>self-claimed <i>hackathlete</i></h1>\r\n          <h1 className=\"row\">based in Bandung, ID_</h1>\r\n          {/* <div className=\"tail\" /> */}\r\n          <p className=\"short-desc\">Passion-driven self-taught engineer. For me, everything is an art.<br/>It's a masterpiece that must be carefully crafted.</p>\r\n          <button className=\"medium\">\r\n            <div className=\"row\">\r\n              <i className=\"fab fa-medium\"></i>\r\n              &nbsp;\r\n              <p>LATEST ARTICLE |&nbsp;</p>\r\n              <p>HOW I GOT MY FIRST INTERNSHIP ON GOOGLE</p>\r\n            </div>\r\n            <div className=\"over\" />\r\n          </button>\r\n          <div className=\"portfolio\">\r\n            {/* <h1>PORTFOLIO</h1> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HomePage from 'containers/HomePage';\r\nimport Menu from 'components/Menu';\r\nimport './index.scss';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-content\">\r\n        {/* <Menu/> */}\r\n        <Switch>\r\n          <Route path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport { Fade } from 'react-reveal'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss'\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    isClicked: false,\r\n    active: 1\r\n  }\r\n\r\n  menuClick = () => {\r\n    this.setState({ isClicked: !this.state.isClicked })\r\n  }\r\n\r\n  render() {\r\n    var menuIconClass = this.state.isClicked ? 'menu-icon menu-icon__change' : 'menu-icon'\r\n    var menuListDisplay = this.state.isClicked ? 'menu-list menu-list__change' : 'menu-list'\r\n    return (\r\n      <div id='menu'>\r\n        <div className={menuIconClass} onClick={this.menuClick}>\r\n          <div className='menu-icon__bar'/>\r\n          <div className='menu-icon__bar'/>\r\n          <div className='menu-icon__bar'/>\r\n        </div>\r\n        <div className={menuListDisplay}>\r\n          <div className='menu-list__content'>\r\n            <ul className='menu-list__ul'>\r\n              <Fade delay={800}>\r\n                <Link to='/projects'>\r\n                  <li key='1'>\r\n                    Projects\r\n                    <div className='menu-list__ul-row'/>\r\n                  </li>\r\n                </Link>\r\n              </Fade>\r\n              <Fade delay={1000}>\r\n                <Link to='#'>\r\n                  <li key='2'>\r\n                    Artworks\r\n                    <div className='menu-list__ul-row'/>\r\n                  </li>\r\n                </Link>\r\n              </Fade>\r\n              <Fade delay={1200}>\r\n                <Link to='#'>\r\n                  <li key='3'>\r\n                    Contact Me\r\n                    <div className='menu-list__ul-row'/>\r\n                  </li>\r\n                </Link>\r\n              </Fade>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from 'containers/App';\r\nimport registerServiceWorker from 'registerServiceWorker';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}